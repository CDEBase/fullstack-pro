// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/PersonList renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <ApolloProvider
    client={
        ApolloClient {
            "addTypename": true,
            "dataId": [Function],
            "dataIdFromObject": [Function],
            "disableNetworkFetches": false,
            "fieldWithArgs": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "initialState": Object {},
            "middleware": [Function],
            "mutate": [Function],
            "networkInterface": MockNetworkInterface {
              "mockedResponsesByKey": Object {},
            },
            "query": [Function],
            "queryDeduplication": true,
            "reducerConfig": Object {
              "addTypename": true,
              "customResolvers": undefined,
              "dataIdFromObject": [Function],
              "fragmentMatcher": [Function],
            },
            "resetStore": [Function],
            "setStore": [Function],
            "ssrMode": false,
            "version": "local",
            "watchQuery": [Function],
          }
    }
    store={null}
>
    <Apollo(flattenProp(pure(PersonListComponent))) />
</ApolloProvider>,
  "nodes": Array [
    <ApolloProvider
      client={
            ApolloClient {
                  "addTypename": true,
                  "dataId": [Function],
                  "dataIdFromObject": [Function],
                  "disableNetworkFetches": false,
                  "fieldWithArgs": [Function],
                  "fragmentMatcher": HeuristicFragmentMatcher {},
                  "initialState": Object {},
                  "middleware": [Function],
                  "mutate": [Function],
                  "networkInterface": MockNetworkInterface {
                    "mockedResponsesByKey": Object {},
                  },
                  "query": [Function],
                  "queryDeduplication": true,
                  "reducerConfig": Object {
                    "addTypename": true,
                    "customResolvers": undefined,
                    "dataIdFromObject": [Function],
                    "fragmentMatcher": [Function],
                  },
                  "resetStore": [Function],
                  "setStore": [Function],
                  "ssrMode": false,
                  "version": "local",
                  "watchQuery": [Function],
                }
      }
      store={null}
>
      <Apollo(flattenProp(pure(PersonListComponent))) />
</ApolloProvider>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <MockedProvider>
        <Apollo(flattenProp(pure(PersonListComponent))) />
</MockedProvider>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": MockedProvider {
        "_reactInternalInstance": [Circular],
        "client": ApolloClient {
          "addTypename": true,
          "dataId": [Function],
          "dataIdFromObject": [Function],
          "disableNetworkFetches": false,
          "fieldWithArgs": [Function],
          "fragmentMatcher": HeuristicFragmentMatcher {},
          "initialState": Object {},
          "middleware": [Function],
          "mutate": [Function],
          "networkInterface": MockNetworkInterface {
            "mockedResponsesByKey": Object {},
          },
          "query": [Function],
          "queryDeduplication": true,
          "reducerConfig": Object {
            "addTypename": true,
            "customResolvers": undefined,
            "dataIdFromObject": [Function],
            "fragmentMatcher": [Function],
          },
          "resetStore": [Function],
          "setStore": [Function],
          "ssrMode": false,
          "version": "local",
          "watchQuery": [Function],
        },
        "context": Object {},
        "props": Object {
          "children": <Apollo(flattenProp(pure(PersonListComponent))) />,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <ApolloProvider
          client={
                    ApolloClient {
                              "addTypename": true,
                              "dataId": [Function],
                              "dataIdFromObject": [Function],
                              "disableNetworkFetches": false,
                              "fieldWithArgs": [Function],
                              "fragmentMatcher": HeuristicFragmentMatcher {},
                              "initialState": Object {},
                              "middleware": [Function],
                              "mutate": [Function],
                              "networkInterface": MockNetworkInterface {
                                "mockedResponsesByKey": Object {},
                              },
                              "query": [Function],
                              "queryDeduplication": true,
                              "reducerConfig": Object {
                                "addTypename": true,
                                "customResolvers": undefined,
                                "dataIdFromObject": [Function],
                                "fragmentMatcher": [Function],
                              },
                              "resetStore": [Function],
                              "setStore": [Function],
                              "ssrMode": false,
                              "version": "local",
                              "watchQuery": [Function],
                            }
          }
          store={null}
>
          <Apollo(flattenProp(pure(PersonListComponent))) />
</ApolloProvider>,
        "_debugID": 2,
        "_renderedOutput": <ApolloProvider
          client={
                    ApolloClient {
                              "addTypename": true,
                              "dataId": [Function],
                              "dataIdFromObject": [Function],
                              "disableNetworkFetches": false,
                              "fieldWithArgs": [Function],
                              "fragmentMatcher": HeuristicFragmentMatcher {},
                              "initialState": Object {},
                              "middleware": [Function],
                              "mutate": [Function],
                              "networkInterface": MockNetworkInterface {
                                "mockedResponsesByKey": Object {},
                              },
                              "query": [Function],
                              "queryDeduplication": true,
                              "reducerConfig": Object {
                                "addTypename": true,
                                "customResolvers": undefined,
                                "dataIdFromObject": [Function],
                                "fragmentMatcher": [Function],
                              },
                              "resetStore": [Function],
                              "setStore": [Function],
                              "ssrMode": false,
                              "version": "local",
                              "watchQuery": [Function],
                            }
          }
          store={null}
>
          <Apollo(flattenProp(pure(PersonListComponent))) />
</ApolloProvider>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <MockedProvider>
    <Apollo(flattenProp(pure(PersonListComponent))) />
</MockedProvider>,
}
`;
